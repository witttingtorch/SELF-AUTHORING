library(distill)
create_theme(Self)
create_theme("Self")
install.packages("postcards")
install.packages("postcards")
install.packages("postcards")
install.packages("postcards")
install.packages("postcards")
remotes::install_github("seankross/postcards@main")
install.packages("remotes")
library(remotes)
remotes::install_github("seankross/postcards@main")
library(postcards)
library(Postcards)
library(Postcards)
install.packages("postcards")
library(postcards)
library(postcard)
install.packages("postcards")
library(postcards)
install.packages("postcards")
detach(packageName(C:\Users\Liam\AppData\Local\Temp\RtmpQDoK6q\downloaded_packages))
detach(packageName(postcards)
)
detach(packageName("postcards))
""
)
"")
install.packages("C:/Users/Liam/AppData/Local/Temp/RtmpQDoK6q/downloaded_packages/postcards_0.2.2.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Liam/AppData/Local/Temp/RtmpQDoK6q/downloaded_packages/bslib_0.3.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Liam/AppData/Local/Temp/RtmpQDoK6q/downloaded_packages/sass_0.2.0.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/Liam/AppData/Local/Temp/RtmpQDoK6q/downloaded_packages/sass_0.4.0.tar.gz", repos = NULL, type = "source")
library(postcards)
install.packages("C:/Users/Liam/AppData/Local/Temp/RtmpQDoK6q/downloaded_packages/postcards_0.2.2.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Liam/Desktop/postcards/R/postcards.R", repos = NULL)
install.packages("C:/Users/Liam/Desktop/postcards/R/postcards.R")
#' Jolla website template.
#'
#' @inheritParams rmarkdown::html_document
#' @export
jolla <- function(css = NULL, includes = NULL) {
get_template("jolla", css, includes)
}
#' Jolla Blue website template.
#'
#' @inheritParams rmarkdown::html_document
#' @export
jolla_blue <- function(css = NULL, includes = NULL) {
get_template("jolla-blue", css, includes)
}
#' Jolla Blue website template.
#'
#' @inheritParams rmarkdown::html_document
#' @export
trestles <- function(css = NULL, includes = NULL) {
get_template("trestles", css, includes)
}
#' Onofre website template.
#'
#' @inheritParams rmarkdown::html_document
#' @export
onofre <- function(css = NULL, includes = NULL) {
get_template("onofre", css, includes)
}
#' Solana website template.
#'
#' @inheritParams rmarkdown::html_document
#' @export
solana <- function(css = NULL, includes = NULL) {
get_template("solana", css, includes)
}
get_template <- function(name, css, includes) {
# Must we use "old" templates?
minimum_required <- "2.8"
installed <- as.character(rmarkdown::pandoc_version())
self_contained <- !(utils::compareVersion(minimum_required, installed) > 0)
template_file <- paste0(name, ".html")
rmarkdown::html_document(
theme = NULL,
self_contained = self_contained,
mathjax = NULL,
template = system.file("pandoc_templates", template_file, package = "postcards"),
css = css,
includes = includes,
md_extensions = "-autolink_bare_uris"
)
}
#' Create a new postcard
#'
#' Create (and optionally edit) a new postcard.
#'
#' @inheritParams rmarkdown::draft
#' @param create_dir `TRUE` to create a new directory for the postcard
#'   (defaults to `FALSE`).
#' @param create_image `TRUE` to create a placeholder image
#'   (defaults to `TRUE`).
#'
#' @export
#' @details
#' Valid values for the `template` argument include `"jolla"`, `"jolla-blue"`,
#' `"trestles"`, `"onofre"`, and `"solana"`.
#' @examples
#' \dontrun{
#'
#' postcards::create_postcard(template = "jolla")
#' postcards::create_postcard(template = "jolla-blue")
#' postcards::create_postcard(template = "trestles")
#' postcards::create_postcard(template = "onofre")
#' postcards::create_postcard(template = "solana")
#' }
create_postcard <- function(file = "index.Rmd",
template = "jolla",
create_dir = FALSE,
edit = TRUE,
create_image = TRUE) {
article <- rmarkdown::draft(
file,
template,
"postcards",
create_dir = create_dir,
edit = FALSE
)
if(create_image) {
img_table <- as.list(
system.file("img",
c("tobi.jpg", "xiang.jpg", "frank.jpg", "herzl.jpg", "sigridur.jpg"),
package = "postcards"))
names(img_table) <- c("jolla", "jolla-blue", "trestles", "onofre", "solana")
file.copy(img_table[[template]], dirname(file))
}
if (edit) {
if (rstudioapi::hasFun("navigateToFile"))
rstudioapi::navigateToFile(file)
else
utils::file.edit(file)
}
invisible(article)
}
new_project_create_postcard <- function(path, ...) {
params <- list(...)
dir.create(path, recursive = TRUE, showWarnings = FALSE)
if (rstudioapi::isAvailable("1.1.287")) {
rstudioapi::initializeProject(path)
}
template_table <- as.list(c("jolla", "jolla-blue", "trestles", "onofre", "solana"))
names(template_table) <- c("Jolla", "Jolla Blue", "Trestles", "Onofre", "Solana")
create_postcard(file.path(path, "index.Rmd"),
template = template_table[[params[["template"]]]],
edit = FALSE)
}
postcards::create_postcard(template = "jolla")
install.packages("postcards")
install.packages("C:/Users/Liam/AppData/Local/Temp/RtmpQDoK6q/downloaded_packages/postcards_0.2.2.tar.gz", repos = NULL, type = "source")
library(postcards)
install.packages("devtools")
library(devtools)
devtools::install_github("hadley/emo")
emo::ji()
emo::ji("face")
emo::clock()
emo::ji_keyword
emo::ji("COPYRIGHT")
emo::ji("earth")
emo::ji("copyright")
emo::ji("yes")
emo::ji("tick")
emo::ji("tick 4")
emo::ji("ok")
emo::ji("yes")
emo::ji("MAP")
emo::ji("map")
emo::ji("lower")
emo::ji("location")
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```
emo::ji("lawn")
emo::ji("fins")
emo::ji("check")
emo::ji("BUG")
emo::ji("bug")
knitr::opts_chunk$set(echo = FALSE)
keywords <- emo::ji_keyword
keywords <- keywords[lengths(keywords) > 1]
emojis <- purrr::map_chr(keywords, function(x) paste0(emo::ji_name[x], collapse = ""))
cat(paste(names(emojis), ": ", emojis, collapse = "\n"))
`r '\u60\u60 \u60r emo::ji("smile")\u60 \u60\u60'` `r emo::ji("smile")`
\u60\u60 \u60r emo::ji("smile")\u60 \u60\u60'` `r emo::ji("smile")
